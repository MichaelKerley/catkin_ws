<launch>

  <arg name="pointcloud_topics" default="/camera/depth/points" />

  <!-- <arg name="pointcloud_topics" default="[/stereo/points2]"/> -->
  <!-- Define a static transform from a camera internal frame to the fcu for every camera used -->
  <node pkg="tf" type="static_transform_publisher" name="tf_depth_camera" args="0 0 0 1.57 3.14 0 fcu camera_link 10" />


  <!-- gazebo configs -->
  <arg name="sdf" default="$(find air_bulbasaur)/models/modalAI/modalAI.sdf" />
  <arg name="world_path" default="$(find air_bulbasaur)/worlds/modalAI.world" />
  <arg name="gui" default="true" />
  <arg name="debug" default="false" />
  <arg name="verbose" default="true" />
  <arg name="paused" default="false" />
  <arg name="respawn_gazebo" default="false" />
  <arg name="lockstep" default="true" />
  <!-- MAVROS configs -->
  <arg name="ns" default="/" />
  <arg name="fcu_url" default="udp://:14540@localhost:14557" />
  <arg name="gcs_url" default="" /> <!-- GCS link is provided by SITL -->
  <arg name="tgt_system" default="1" />
  <arg name="tgt_component" default="1" />
  <arg name="vehicle" default="iris" />
  <param name="use_sim_time" value="true" />

  <!-- Launch rqt_reconfigure -->
  <node pkg="rqt_reconfigure" type="rqt_reconfigure" output="screen" name="rqt_reconfigure" />

  <!-- Launch PX4 SITL -->
  <include file="$(find px4)/launch/px4.launch">
    <arg name="vehicle" value="$(arg vehicle)" />
  </include>


  <!-- Launch stereo_image_proc node which runs OpenCV's block matching  -->
  <node ns="stereo" pkg="stereo_image_proc" type="stereo_image_proc" name="stereo_image_proc">
    <param name="stereo_algorithm" type="double" value="1.0" />
    <param name="correlation_window_size" type="double" value="19.0" />
    <param name="disparity_range" type="double" value="32.0" />
    <param name="uniqueness_ratio" type="double" value="40.0" />
    <param name="speckle_size" type="double" value="1000.0" />
    <param name="speckle_range" type="double" value="2.0" />
  </node>

  <!-- Launch MavROS -->
  <group ns="$(arg ns)">
    <include file="$(find mavros)/launch/node.launch">
      <arg name="pluginlists_yaml" value="$(find mavros)/launch/px4_pluginlists.yaml" />
      <!-- Need to change the config file to get the tf topic and get local position in terms of local origin -->
      <arg name="config_yaml" value="$(find avoidance)/resource/px4_config.yaml" />
      <arg name="fcu_url" value="$(arg fcu_url)" />
      <arg name="gcs_url" value="$(arg gcs_url)" />
      <arg name="tgt_system" value="$(arg tgt_system)" />
      <arg name="tgt_component" value="$(arg tgt_component)" />
    </include>
  </group>

  <!-- Launch Gazebo -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="gui" value="$(arg gui)" />
    <arg name="world_name" value="$(arg world_path)" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="verbose" value="$(arg verbose)" />
    <arg name="paused" value="$(arg paused)" />
    <arg name="respawn_gazebo" value="$(arg respawn_gazebo)" />
    <arg unless="$(arg lockstep)" name="extra_gazebo_args" value="" />
    <arg if="$(arg lockstep)" name="extra_gazebo_args" value="--lockstep" />
  </include>


  <!-- gazebo model -->
  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" output="screen" args="-sdf -file $(arg sdf) -model $(arg vehicle) " />

  <!-- Launch safe landing planner -->
  <node name="safe_landing_planner_node" pkg="safe_landing_planner" type="safe_landing_planner_node" output="screen">
    <param name="pointcloud_topics" value="$(arg pointcloud_topics)" />
    <!-- <param name="world_name" value="$(find avoidance)/sim/worlds/$(arg world_file_name).yaml" /> -->
  </node>

  <node name="waypoint_generator_node" pkg="safe_landing_planner" type="waypoint_generator_node" output="screen"></node>
  <node name="dynparam_slpn" pkg="dynamic_reconfigure" type="dynparam" args="load safe_landing_planner_node $(find safe_landing_planner)/cfg/slpn.yaml" />
  <node name="dynparam_wpgn" pkg="dynamic_reconfigure" type="dynparam" args="load waypoint_generator_node $(find safe_landing_planner)/cfg/wpgn.yaml" />
  <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find safe_landing_planner)/resource/safe_landing_planner.rviz" />


</launch>